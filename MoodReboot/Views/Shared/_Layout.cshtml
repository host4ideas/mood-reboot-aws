<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/flowbite.min.css" />
    <link rel="stylesheet" href="~/css/plugins/typography.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="apple-touch-icon" sizes="57x57" href="~/favicon/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="~/favicon/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="~/favicon/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="~/favicon/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="~/favicon/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="~/favicon/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="~/favicon/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="~/favicon/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="~/favicon/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192" href="~/favicon/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="~/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="~/favicon/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="~/favicon/favicon-16x16.png">
    <link rel="manifest" href="~/favicon/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="~/favicon/ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">
    <script src="https://player.live-video.net/1.0.0/amazon-ivs-player.min.js"></script>
    <script>
        // On page load or when changing themes, best to add inline in `head` to avoid FOUC
        if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            document.documentElement.classList.add('dark');
        } else {
            document.documentElement.classList.remove('dark')
        }
    </script>
    <title>@(ViewData["TITLE"] ?? "Mood Reboot Learning Platform")</title>
</head>

<body class="bg-white dark:bg-gray-900">
    <!-- Navbar -->
    <header class="sticky top-0 w-full z-40" style="border: 10px solid transparent; border-top: 15px solid transparent; pointer-events:none;">
        <nav class="w-full p-1 md:p-0 md:px-4 border-2 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800" style="max-width: 1024px; margin: auto; pointer-events:auto;">
            <div class="flex flex-wrap justify-between items-center">
                <!-- Logo && mobile menu -->
                <partial name="_NavbarHomeMobileMenuPartial" />
                <div class="flex items-center md:order-2">
                    @{
                        if (Context.User.Identity.IsAuthenticated == true)
                        {
                            <!-- User Links -->
                            <partial name="_NavbarUserLinksPartial" />
                        }
                    }
                </div>
                <!-- Center links / Mobile Menu Dropdown -->
                <partial name="_NavbarCenterLinksPartial" />
            </div>
        </nav>
    </header>

    <!-- Main content -->
    <main class="relative p-4 mx-auto max-w-screen-xl">
        @RenderBody()
    </main>

    <!-- Footer -->
    <partial name="_FooterPartial" />

    <!-- Back to top button -->
    <partial name="_ScrollTopButtonPartial" />

    <!-- Chat Window -->
    @{
        if (Context.User.Identity.IsAuthenticated == true)
        {
            <!-- Chat button -->
            <div id="btnChatToggle" class="fixed" style="bottom: 20px; right: 20px;">
                <div role="status">
                    <!-- Loading spinner -->
                    <svg aria-hidden="true" class="inline w-8 h-8 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-red-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor" />
                        <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill" />
                    </svg>
                    <span class="sr-only">Loading...</span>
                </div>
            </div>

            <!-- Chat window -->
            <div id="chatWindow" class="fixed rounded-lg p-4 z-50 border-2 border-white dark:text-white dark:border-gray-900 bg-gray-200 dark:bg-gray-700" style="bottom: 70px; right: 20px; display: none; overflow: auto; resize: both; max-height: 500px; max-width: 700px;">
            </div>
        }
    }
</body>

<!-- Libraries -->
<script src="~/js/plugins/flowbite.min.js"></script>
<script src="~/js/plugins/jquery-3.6.3.min.js"></script>
<script src="~/js/plugins/fuse.basic.min.js"></script>
<script src="~/js/plugins/xlsx.mini.min.js"></script>
<script src="~/js/pdfjs-3.3.122-dist/build/pdf.js"></script>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<!-- Markdown parser -->
<script src="~/js/plugins/showdown.min.js"></script>
<script src="~/js/plugins/xss.min.js"></script>
<script src="~/js/plugins/showdown-xss-filter.js"></script>
<!-- Custom JS -->
<script asp-append-version="true" src="~/js/site.js"></script>
@{
    // Load chat functionality if user is logged in
    if (Context.User.Identity.IsAuthenticated == true)
    {
        string userId = Context.User.FindFirstValue(ClaimTypes.NameIdentifier);
        string currentUserName = Context.User.FindFirstValue(ClaimTypes.Name);
        string requestMessages = Url.Action("GetChatMessages", "Messages");
        string requestUpdateLastSeen = Url.Action("UpdateChatLastSeen", "Messages");
        string requestSearchUsers = Url.Action("SearchUsers", "Users");
        string requestCreateChat = Url.Action("CreateChatGroup", "Messages");
        string requestUpdateChat = Url.Action("UpdateChatGroup", "Messages");
        string requestDeleteChat = Url.Action("DeleteChatGroup", "Messages");
        string requestRemoveUserChat = Url.Action("RemoveUserFromChat", "Messages");
        string requestAddUsersChat = Url.Action("AddUsersToChat", "Messages");
        // Once the session is validated create the connection string
        string connectionString = "/chatHub?userId=" + userId.ToString();

        <text>
            <script asp-append-version="true" src="~/js/chat.js"></script>
            <script>
                $(document).ready(function () {
                    // Load chat window
                    $("#chatWindow").load('@Url.Action("ChatWindowPartial", "Messages")', function (responseTxt, statusTxt, xhr) {
                        // If the chat is loaded change the button
                        if (statusTxt == "success") {
                            let html = `
button onclick="btnChatToggle()" type="button" class="inline-flex items-center px-5 py-2.5 text-sm font-medium text-center text-white bg-blue-700 rounded-full hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
svg width="20px" height="20px" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <path strokeLinecap="round" strokeLinejoin="round" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z" />
svg>
button>`;
                            $("#btnChatToggle").html(html);

                            // Load notifications
                            $("#notifications-window").load('@Url.Action("ChatNotificationsPartial", "Messages")');

                            initializeConnection("@connectionString", "@currentUserName");
                        }

                        if (statusTxt == "error") {
                            alert("Error: " + xhr.status + ": " + xhr.statusText);
                        }
                    });
                });
            </script>
            <script>
                function loadChatMessages(chatGroupId, notificationId) {
                    $("#messagesList").html("");
                    $("#messagesList").removeClass("hidden");
                    $("#hiddenGroupId").val(chatGroupId);
                    // Hide chats sidebar
                    $("#chatsSidenav").hide();
                    $("#chatsSidenav").height($("#chatWindow").height() - 50);
                    $("#chatsSidenav").width($("#chatWindow").width() - 5);
                    $("#chatWindow").show("fast");
                    // Sidenav icon toggle
                    $("#open-sidenav-icon").toggle("fast");
                    $("#close-sidenav-icon").toggle("fast");
                    // Show input message
                    $("#input-message-container").removeClass("hidden");
                    // Notifications
                    $(`#${notificationId}`).remove();
                    $("#btn-open-notifications").removeClass("animate-pulse");
                    // Editor stuff
                    $("#new-chat-window-editor").addClass("hidden");
                    $("#edit-chat-panel").addClass("hidden");
                    $("#search-users-chat-panel").addClass("hidden");

                    // Load messages of the clicked chat
                    const requestMessages = '@requestMessages' + '?chatGroupId=' + chatGroupId;
                    $.get(requestMessages, function (messageList) {
                        messageList.forEach((message) => {
                            let messageDate = new Date(message.datePosted);
                            let formattedDate = messageDate.getDay() + "/" + messageDate.getMonth() + " | " + messageDate.getHours() + ":" + messageDate.getMinutes();

                            let messageUserName = message.userName;

                            if (messageUserName == "@currentUserName") {

                                messageUserName = "You";
                            }

                            const li = document.createElement("li");
                            const htmlMessage = `
                                    <li class="dark:text-gray-200 my-4 text-sm">
                                        <div class="mr-2 p-2 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
                                            <h5 class="mb-2 text-md font-semibold tracking-tight text-gray-900 dark:text-white">${messageUserName}</h5>
                                            <p class="mb-2 font-normal text-gray-500 dark:text-gray-400">${message.text}</p>
                                            <p class="text-xs text-gray-500 dark:text-gray-400">${formattedDate}</p>
                                        </div>
                                    </li>`;
                            document.getElementById("messagesList").appendChild(li);
                            li.innerHTML = htmlMessage;
                        });
                        // Scroll to bottom
                        const d = $('#messagesList');
                        d.scrollTop(d.prop("scrollHeight"));
                    });

                    // Save that the user has clicked in the chat
                    $.get('@requestUpdateLastSeen', { chatGroupId: chatGroupId });
                }

                function newChatGroup() {
                    const usersToAdd = [];
                    $("#selected-search-users-chat").children().each(function () {
                        usersToAdd.push(this.value);
                    });
                    $.post('@requestCreateChat', { userIds: usersToAdd }, function () {
                        location.reload();
                    });
                }

                function editChatGroup(e, action, chatGroupId, groupName) {
                    e.stopPropagation();
                    $("#input-message-container").addClass("hidden");
                    $("#new-chat-window-editor").addClass("hidden");
                    $("#edit-chat-panel").addClass("hidden");
                    $("#messagesList").addClass("hidden");
                    $("#chatsSidenav").hide("fast");
                    $("#search-users-chat-panel").addClass("hidden");

                    if (action === "update") {
                        $("#edit-chat-panel").removeClass("hidden");

                        let html = `<h1 class="text-2xl">Editar chat</h1>
                                                                                                                                                                        <form action="@requestUpdateChat" method="post">
                                                                                                                                                                                        <input type="hidden" name="Id" value="${chatGroupId}" />
                                                                                                                                                                                        <input type="text" name="Name" class="block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" value="${groupName}">
                                                                                                                                                                                        <button type="submit" class="text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700">
                                                                                                                                                                                            Editar
                                                                                                                                                                                        </button>
                                                                                                                                                                                    </form>
                                                                                                                                                                                    <!-- Add users to the group -->
                                                                                                                                                                                    <div class="flex justify-center items-center gap-2">
                                                                                                                                                                                        <button onclick="toggleSearchUserChat()" class="text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700" type="button">
                                                                                                                                                                                            Añadir usuarios
                                                                                                                                                                                        </button>
                                                                                                                                                                                        <button onclick="addUsersToChat(${chatGroupId})" type="button" class="focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800">
                                                                                                                                                                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
                                                                                                                                                                                                <path fill-rule="evenodd" d="M12 3.75a.75.75 0 01.75.75v6.75h6.75a.75.75 0 010 1.5h-6.75v6.75a.75.75 0 01-1.5 0v-6.75H4.5a.75.75 0 010-1.5h6.75V4.5a.75.75 0 01.75-.75z" clip-rule="evenodd" />
                                                                                                                                                                                            </svg>
                                                                                                                                                                                        </button>
                                                                                                                                                                                    </div>
                                                                                                                                                                                <div id="dropdown-user-search" class="z-50 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
                                                                                                                                                                                    <input type="text" oninput="searchUsers(event)" class="block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Email o usuario">
                                                                                                                                                                                    <ul id="selected-search-users-chat" class="py-2 text-sm text-gray-700 dark:text-gray-200 max-h-72 overflow-y-auto overflow-x-hidden">
                                                                                                                                                                                    </ul>
                                                                                                                                                                                    <ul id="users-result-list" class="py-2 text-sm text-gray-700 dark:text-gray-200 max-h-72 overflow-y-auto overflow-x-hidden">
                                                                                                                                                                                    </ul>
                                                                                                                                                                                </div>`;

                        $("#edit-chat-panel").html(html);
                    } else if (action === "delete") {
                        $.get('@requestDeleteChat', { chatGroupId: chatGroupId }, function () {
                            location.reload();
                        });
                    } else if (action === "out") {
                        $.get('@requestRemoveUserChat', { userId: @userId, chatGroupId: chatGroupId }, function () {
                            location.reload();
                        });
                    } else if (action === "new") {
                        $("#new-chat-window-editor").removeClass("hidden");
                        $("#search-users-chat-panel").removeClass("hidden");
                    }
                }

                function addUsersToChat(chatGroupId) {
                    const usersToAdd = [];
                    $("#selected-search-users-chat").children().each(function () {
                        usersToAdd.push(this.value);
                    });
                    console.log(usersToAdd);
                    $.post('@requestAddUsersChat', { chatGroupId: chatGroupId, userIds: usersToAdd }, function () {
                        location.reload();
                    });
                }

                function searchUsers(e) {
                    $("#users-result-list").html("");
                    const pattern = e.target.value;

                    if (pattern.length > 3) {
                        $("#users-result-list").html("");
                        // Search users while typing
                        const requestSearchUsers = '@requestSearchUsers' + '?pattern=' + pattern;
                        // Response: Tuple<string, int>
                        $.get(requestSearchUsers, function (users) {
                            users.forEach((user) => {
                                // Show user if it's not the current logged one
                                if (user.item2 != @userId) {
                                    const li = document.createElement("li");
                                    li.classList.add("block", "px-4", "py-2", "hover:bg-gray-100", "dark:hover:bg-gray-600", "dark:hover:text-white");
                                    document.getElementById("users-result-list").appendChild(li);
                                    li.textContent = user.item1;
                                    // Onclick add it as selected user
                                    li.onclick = function () {
                                        const selectedLi = document.createElement("li");
                                        selectedLi.classList.add("block", "px-4", "py-2", "hover:bg-gray-100", "dark:hover:bg-gray-600", "dark:hover:text-white");
                                        document.getElementById("selected-search-users-chat").appendChild(selectedLi);
                                        selectedLi.textContent = user.item1;
                                        selectedLi.value = user.item2;
                                        // Onclick remove it
                                        selectedLi.onclick = function () {
                                            selectedLi.remove();
                                        }
                                    }
                                }
                            });
                        });
                    }
                }

                function toggleChatOptions(e, dropdownId) {
                    e.stopPropagation();
                    $(`#${dropdownId}`).toggle("fast");
                }

                function toggleSearchUserChat() {
                    $("#dropdown-user-search").toggle("fast");
                    $("#users-result-list").html("");
                    $("#selected-search-users-chat").html("");
                }
            </script>
        </text>
    }

    await Html.RenderPartialAsync("_ValidationScriptsPartial");
    await RenderSectionAsync("scripts", false);
}
</html>
